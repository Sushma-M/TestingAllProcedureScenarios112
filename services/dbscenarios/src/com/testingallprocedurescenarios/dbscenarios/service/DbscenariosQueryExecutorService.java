/*Generated by WaveMaker Studio*/
package com.testingallprocedurescenarios.dbscenarios.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Date;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportOptions;

import com.testingallprocedurescenarios.dbscenarios.models.query.*;

public interface DbscenariosQueryExecutorService {

    Page<HqlMysqlAllTypesWithAliasResponse> executeHQL_MysqlAllTypesWithAlias(Pageable pageable);

    InputStream getBlobcolContentForHQL_MysqlAllTypesWithAlias() throws EntityNotFoundException;

    void exportHQL_MysqlAllTypesWithAlias(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvGetBelowPk10Response> executeSV_GetBelowPK10(Pageable pageable);

    InputStream getBlobColContentForSV_GetBelowPK10() throws EntityNotFoundException;

    void exportSV_GetBelowPK10(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    SvGetSingleRecordResponse executeSV_GetSingleRecord(Integer id);

    InputStream getBlobColContentForSV_GetSingleRecord(Integer id) throws EntityNotFoundException;

    Page<SvLoggedinUserResponse> executeSV_LoggedinUser(Pageable pageable);

    InputStream getBlobColContentForSV_LoggedinUser() throws EntityNotFoundException;

    void exportSV_LoggedinUser(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeSV_InsertQueryUsingSystemParams(SvInsertQueryUsingSystemParamsRequest svInsertQueryUsingSystemParamsRequest);

    Page<SvByteDatetimeResponse> executeSV_ByteDatetime(Pageable pageable);

    void exportSV_ByteDatetime(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvAllTypesData1Response> executeSV_ALlTypesData1(Pageable pageable);

    InputStream getBlobColContentForSV_ALlTypesData1() throws EntityNotFoundException;

    void exportSV_ALlTypesData1(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvGetByDateColResponse> executeSV_GetByDateCol(Date datecol, Pageable pageable);

    InputStream getBlobColContentForSV_GetByDateCol(Date datecol) throws EntityNotFoundException;

    void exportSV_GetByDateCol(Date datecol, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvAllTypesDataResponse> executeSV_AllTypesData(Pageable pageable);

    InputStream getBlobColContentForSV_AllTypesData() throws EntityNotFoundException;

    void exportSV_AllTypesData(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

}