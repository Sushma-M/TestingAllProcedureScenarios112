/*Generated by WaveMaker Studio*/
package com.testingallprocedurescenarios.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Uc generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`UC`", uniqueConstraints = {
            @UniqueConstraint(name = "`UK_UC_COLUMN2`", columnNames = {"`COLUMN2`"})})
public class Uc implements Serializable {

    private Integer id;
    private int column2;
    private String column3;
    private Up up;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`COLUMN2`", nullable = false, scale = 0, precision = 10)
    public int getColumn2() {
        return this.column2;
    }

    public void setColumn2(int column2) {
        this.column2 = column2;
    }

    @Column(name = "`COLUMN3`", nullable = true, length = 255)
    public String getColumn3() {
        return this.column3;
    }

    public void setColumn3(String column3) {
        this.column3 = column3;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`COLUMN2`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_UC_TO_UP_COLUMN2_ID`"))
    @Fetch(FetchMode.JOIN)
    public Up getUp() {
        return this.up;
    }

    public void setUp(Up up) {
        if(up != null) {
            this.column2 = up.getId();
        }

        this.up = up;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Uc)) return false;
        final Uc uc = (Uc) o;
        return Objects.equals(getId(), uc.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}