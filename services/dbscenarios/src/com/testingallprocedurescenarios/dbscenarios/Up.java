/*Generated by WaveMaker Studio*/
package com.testingallprocedurescenarios.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * Up generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`UP`")
public class Up implements Serializable {

    private Integer id;
    private String column2;
    private String column3;
    private String column4;
    private Uc uc;

    @Id
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`COLUMN2`", nullable = true, length = 255)
    public String getColumn2() {
        return this.column2;
    }

    public void setColumn2(String column2) {
        this.column2 = column2;
    }

    @Column(name = "`COLUMN3`", nullable = false, length = 255)
    public String getColumn3() {
        return this.column3;
    }

    public void setColumn3(String column3) {
        this.column3 = column3;
    }

    @Column(name = "`COLUMN4`", nullable = true, length = 255)
    public String getColumn4() {
        return this.column4;
    }

    public void setColumn4(String column4) {
        this.column4 = column4;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "up")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public Uc getUc() {
        return this.uc;
    }

    public void setUc(Uc uc) {
        this.uc = uc;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Up)) return false;
        final Up up = (Up) o;
        return Objects.equals(getId(), up.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}