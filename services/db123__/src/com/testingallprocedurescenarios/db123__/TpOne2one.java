/*Generated by WaveMaker Studio*/
package com.testingallprocedurescenarios.db123__;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Time;
import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * TpOne2one generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`TP_ONE2ONE`")
public class TpOne2one implements Serializable {

    private String charId;
    private Date dateCol;
    private LocalDateTime datetimeCol;
    private Time timeCol;
    private LocalDateTime timestampCol;
    private TcOne2one tcOne2one;

    @Id
    @Column(name = "`CHAR ID`", nullable = false, length = 1)
    public String getCharId() {
        return this.charId;
    }

    public void setCharId(String charId) {
        this.charId = charId;
    }

    @Column(name = "`DATE COL`", nullable = true)
    public Date getDateCol() {
        return this.dateCol;
    }

    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    @Column(name = "`DATETIME COL`", nullable = true)
    public LocalDateTime getDatetimeCol() {
        return this.datetimeCol;
    }

    public void setDatetimeCol(LocalDateTime datetimeCol) {
        this.datetimeCol = datetimeCol;
    }

    @Column(name = "`TIME COL`", nullable = true)
    public Time getTimeCol() {
        return this.timeCol;
    }

    public void setTimeCol(Time timeCol) {
        this.timeCol = timeCol;
    }

    @Column(name = "`TIMESTAMP COL`", nullable = true)
    public LocalDateTime getTimestampCol() {
        return this.timestampCol;
    }

    public void setTimestampCol(LocalDateTime timestampCol) {
        this.timestampCol = timestampCol;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "tpOne2one")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public TcOne2one getTcOne2one() {
        return this.tcOne2one;
    }

    public void setTcOne2one(TcOne2one tcOne2one) {
        this.tcOne2one = tcOne2one;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TpOne2one)) return false;
        final TpOne2one tpOne2one = (TpOne2one) o;
        return Objects.equals(getCharId(), tpOne2one.getCharId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getCharId());
    }
}