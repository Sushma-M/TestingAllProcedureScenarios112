/*Generated by WaveMaker Studio*/
package com.testingallprocedurescenarios.adventureworks2014;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PostPersist;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * BusinessEntity generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`BusinessEntity`", uniqueConstraints = {
            @UniqueConstraint(name = "`UK_p8189e56xfly453v2kq7sjtb3`", columnNames = {"`rowguid`"})})
public class BusinessEntity implements Serializable {

    private Integer businessEntityId;
    private String rowguid;
    private LocalDateTime modifiedDate;
    private Person personForBusinessEntityId;
    private List<Person> personsForPerson1BusinessEntityId;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`BusinessEntityID`", nullable = false, scale = 0, precision = 10)
    public Integer getBusinessEntityId() {
        return this.businessEntityId;
    }

    public void setBusinessEntityId(Integer businessEntityId) {
        this.businessEntityId = businessEntityId;
    }

    @Column(name = "`rowguid`", nullable = false, length = 32)
    public String getRowguid() {
        return this.rowguid;
    }

    public void setRowguid(String rowguid) {
        this.rowguid = rowguid;
    }

    @Column(name = "`ModifiedDate`", nullable = false)
    public LocalDateTime getModifiedDate() {
        return this.modifiedDate;
    }

    public void setModifiedDate(LocalDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "businessEntityByBusinessEntityId")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public Person getPersonForBusinessEntityId() {
        return this.personForBusinessEntityId;
    }

    public void setPersonForBusinessEntityId(Person personForBusinessEntityId) {
        this.personForBusinessEntityId = personForBusinessEntityId;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "businessEntityByPerson1BusinessEntityId")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public List<Person> getPersonsForPerson1BusinessEntityId() {
        return this.personsForPerson1BusinessEntityId;
    }

    public void setPersonsForPerson1BusinessEntityId(List<Person> personsForPerson1BusinessEntityId) {
        this.personsForPerson1BusinessEntityId = personsForPerson1BusinessEntityId;
    }

    @PostPersist
    public void onPostPersist() {
        if(personForBusinessEntityId != null) {
            personForBusinessEntityId.setBusinessEntityByBusinessEntityId(this);
        }
        if(personsForPerson1BusinessEntityId != null) {
            personsForPerson1BusinessEntityId.forEach(_person -> _person.setBusinessEntityByPerson1BusinessEntityId(this));
        }
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof BusinessEntity)) return false;
        final BusinessEntity businessEntity = (BusinessEntity) o;
        return Objects.equals(getBusinessEntityId(), businessEntity.getBusinessEntityId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getBusinessEntityId());
    }
}