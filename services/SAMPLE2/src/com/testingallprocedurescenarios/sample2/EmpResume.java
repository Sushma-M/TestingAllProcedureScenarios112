/*Generated by WaveMaker Studio*/
package com.testingallprocedurescenarios.sample2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * EmpResume generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`EMP_RESUME`")
@IdClass(EmpResumeId.class)
public class EmpResume implements Serializable {

    private String resumeFormat;
    private String empno;
    private String resume;
    private Employee employee;

    @Id
    @Column(name = "`RESUME_FORMAT`", nullable = false, length = 10)
    public String getResumeFormat() {
        return this.resumeFormat;
    }

    public void setResumeFormat(String resumeFormat) {
        this.resumeFormat = resumeFormat;
    }

    @Id
    @Column(name = "`EMPNO`", nullable = false, length = 6)
    public String getEmpno() {
        return this.empno;
    }

    public void setEmpno(String empno) {
        this.empno = empno;
    }

    @Column(name = "`RESUME`", nullable = true, length = 2147483647)
    public String getResume() {
        return this.resume;
    }

    public void setResume(String resume) {
        this.resume = resume;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`EMPNO`", referencedColumnName = "`EMPNO`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_EMP_RESUME`"))
    @Fetch(FetchMode.JOIN)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        if(employee != null) {
            this.empno = employee.getEmpno();
        }

        this.employee = employee;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmpResume)) return false;
        final EmpResume empResume = (EmpResume) o;
        return Objects.equals(getResumeFormat(), empResume.getResumeFormat()) &&
                Objects.equals(getEmpno(), empResume.getEmpno());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getResumeFormat(),
                getEmpno());
    }
}