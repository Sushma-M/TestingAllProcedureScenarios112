/*Generated by WaveMaker Studio*/
package com.testingallprocedurescenarios.wmstudio;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Jobs generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`JOBS`")
public class Jobs implements Serializable {

    private String jobId;
    private String jobTitle;
    private Integer minSalary;
    private Integer maxSalary;
    private List<Employees> employeeses;
    private List<JobHistory> jobHistories;

    @Id
    @Column(name = "`JOB_ID`", nullable = false, length = 10)
    public String getJobId() {
        return this.jobId;
    }

    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    @Column(name = "`JOB_TITLE`", nullable = false, length = 35)
    public String getJobTitle() {
        return this.jobTitle;
    }

    public void setJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
    }

    @Column(name = "`MIN_SALARY`", nullable = true, scale = 0, precision = 6)
    public Integer getMinSalary() {
        return this.minSalary;
    }

    public void setMinSalary(Integer minSalary) {
        this.minSalary = minSalary;
    }

    @Column(name = "`MAX_SALARY`", nullable = true, scale = 0, precision = 6)
    public Integer getMaxSalary() {
        return this.maxSalary;
    }

    public void setMaxSalary(Integer maxSalary) {
        this.maxSalary = maxSalary;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "jobs")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public List<Employees> getEmployeeses() {
        return this.employeeses;
    }

    public void setEmployeeses(List<Employees> employeeses) {
        this.employeeses = employeeses;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "jobs")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public List<JobHistory> getJobHistories() {
        return this.jobHistories;
    }

    public void setJobHistories(List<JobHistory> jobHistories) {
        this.jobHistories = jobHistories;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Jobs)) return false;
        final Jobs jobs = (Jobs) o;
        return Objects.equals(getJobId(), jobs.getJobId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getJobId());
    }
}