/*Generated by WaveMaker Studio*/
package com.testingallprocedurescenarios.wmstudio;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Locations generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`LOCATIONS`")
public class Locations implements Serializable {

    private Short locationId;
    private String streetAddress;
    private String postalCode;
    private String city;
    private String stateProvince;
    private String countryId;
    private Countries countries;
    private List<Departments> departmentses;

    @Id
    @Column(name = "`LOCATION_ID`", nullable = false, scale = 0, precision = 4)
    public Short getLocationId() {
        return this.locationId;
    }

    public void setLocationId(Short locationId) {
        this.locationId = locationId;
    }

    @Column(name = "`STREET_ADDRESS`", nullable = true, length = 40)
    public String getStreetAddress() {
        return this.streetAddress;
    }

    public void setStreetAddress(String streetAddress) {
        this.streetAddress = streetAddress;
    }

    @Column(name = "`POSTAL_CODE`", nullable = true, length = 12)
    public String getPostalCode() {
        return this.postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    @Column(name = "`CITY`", nullable = false, length = 30)
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @Column(name = "`STATE_PROVINCE`", nullable = true, length = 25)
    public String getStateProvince() {
        return this.stateProvince;
    }

    public void setStateProvince(String stateProvince) {
        this.stateProvince = stateProvince;
    }

    @Column(name = "`COUNTRY_ID`", nullable = true, length = 2)
    public String getCountryId() {
        return this.countryId;
    }

    public void setCountryId(String countryId) {
        this.countryId = countryId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`COUNTRY_ID`", referencedColumnName = "`COUNTRY_ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`LOC_C_ID_FK`"))
    @Fetch(FetchMode.JOIN)
    public Countries getCountries() {
        return this.countries;
    }

    public void setCountries(Countries countries) {
        if(countries != null) {
            this.countryId = countries.getCountryId();
        }

        this.countries = countries;
    }
    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locations")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public List<Departments> getDepartmentses() {
        return this.departmentses;
    }

    public void setDepartmentses(List<Departments> departmentses) {
        this.departmentses = departmentses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Locations)) return false;
        final Locations locations = (Locations) o;
        return Objects.equals(getLocationId(), locations.getLocationId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getLocationId());
    }
}